{
  "openapi": "3.0.1",
  "info": {
    "title": "GardenControlApi",
    "description": "An API that allows the monitor and control of devices plugged in to the GPIO Pins on a Raspberry Pi",
    "version": "v1"
  },
  "paths": {
    "/api/AppSettings": {
      "get": {
        "tags": [
          "AppSettings"
        ],
        "summary": "Returns all settings",
        "operationId": "AppSettingGetAll",
        "responses": {
          "200": {
            "description": "Returns the all AppSettings",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "AppSettings"
        ],
        "summary": "Creates an AppSetting",
        "description": "Any value set for CanBeUpdated property will be ignored and always set to true",
        "operationId": "AppSettingInsert",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created AppSetting",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              }
            }
          },
          "400": {
            "description": "If the key or value is null or empty",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/AppSettings/{id}": {
      "get": {
        "tags": [
          "AppSettings"
        ],
        "summary": "Returns specified setting",
        "operationId": "AppSettingGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the the specified AppSetting",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppSettingDto"
                }
              }
            }
          },
          "404": {
            "description": "If the AppSetting cannot be found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AppSettings"
        ],
        "summary": "Updates setting with specified value",
        "operationId": "AppSettingUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AppSettingDto"
                  }
                ],
                "description": "",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Returns when the AppSetting is updated sucessfully"
          },
          "400": {
            "description": "If the id parameter and id in the object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "If the AppSetting cannot be found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AppSettings"
        ],
        "summary": "Deletes specified setting",
        "operationId": "AppSettingDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns when the AppSetting is deleted sucessfully"
          },
          "404": {
            "description": "If the AppSetting cannot be found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ControlDevice": {
      "get": {
        "tags": [
          "ControlDevice"
        ],
        "summary": "Returns all Control Devices",
        "operationId": "ControlDeviceGetAll",
        "responses": {
          "200": {
            "description": "Returns all control devices",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ControlDevice"
        ],
        "summary": "Creates a Control Device",
        "operationId": "ControlDeviceInsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Control Device created successfully"
          }
        }
      }
    },
    "/api/ControlDevice/{id}": {
      "get": {
        "tags": [
          "ControlDevice"
        ],
        "summary": "Returns a Control Device",
        "operationId": "ControlDeviceGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified control device",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ControlDeviceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlDeviceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ControlDeviceDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find a control device with the specified id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ControlDevice"
        ],
        "summary": "Updates a Control Device",
        "operationId": "ControlDeviceUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ControlDeviceDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Control Device successfully updated"
          },
          "400": {
            "description": "Control Device Id in url and object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find a control device with the specified id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ControlDevice"
        ],
        "summary": "Deletes a Control Device",
        "operationId": "ControlDeviceDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Control Device successfully deleted"
          },
          "404": {
            "description": "Could not find a control device with the specified id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/DS18B20/{id}": {
      "get": {
        "tags": [
          "DS18B20"
        ],
        "summary": "Returns a reading value from the specified DS18B20 temperature probe",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns temperature value",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DS18B20Dto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DS18B20Dto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DS18B20Dto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find DS18B20 probe from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/DS18B20/SerialNumbers/{gpioPin}": {
      "get": {
        "tags": [
          "DS18B20"
        ],
        "summary": "Returns the serial numbers of all the attached probes to the specified GPIO Pin.\r\nUseful for getting serial numbers to register each probe.",
        "parameters": [
          {
            "name": "gpioPin",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a list of the 1-wire protocol serial numbers attached to the GPIO pin",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/FloatSensor/{id}": {
      "get": {
        "tags": [
          "FloatSensor"
        ],
        "summary": "Returns the current state of the float sensor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns float sensor state",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FloatSensorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FloatSensorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FloatSensorDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find float sensor from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Measurement": {
      "get": {
        "tags": [
          "Measurement"
        ],
        "summary": "Returns all Measurements",
        "operationId": "MeasurementGetAll",
        "responses": {
          "200": {
            "description": "Returns all measurements",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Measurement"
        ],
        "summary": "Creates a Measurement",
        "operationId": "MeasurementInsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Measurement created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              }
            }
          },
          "400": {
            "description": "Could not find Measurement from id"
          }
        }
      }
    },
    "/api/Measurement/{id}": {
      "get": {
        "tags": [
          "Measurement"
        ],
        "summary": "Returns specified Measurement",
        "operationId": "MeasurementGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all measurements",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Measurement from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Measurement"
        ],
        "summary": "Updates specified Measurement",
        "operationId": "MeasurementUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MeasurementDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Measurement updated successfully"
          },
          "400": {
            "description": "Measurement Id in url and object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Measurement from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Measurement"
        ],
        "summary": "Deletes specified Measurement",
        "operationId": "MeasurementDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Measurement successfully deleted"
          },
          "404": {
            "description": "Could not find Measurement from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/MeasurementUnit": {
      "get": {
        "tags": [
          "MeasurementUnit"
        ],
        "summary": "Returns All Measurement Units",
        "operationId": "MeasurementUnitGetAll",
        "responses": {
          "200": {
            "description": "Returns all measurement units",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeasurementUnitDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Could not find Measurement from id"
          }
        }
      }
    },
    "/api/MeasurementUnit/{id}": {
      "get": {
        "tags": [
          "MeasurementUnit"
        ],
        "summary": "Returns specified Measurement Unit",
        "operationId": "MeasurementUnitGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns specified measurement unit",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementUnitDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Measurement Unit from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Relay/{id}": {
      "get": {
        "tags": [
          "Relay"
        ],
        "summary": "Returns the current state of the relay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns relay state",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RelayDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelayDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find relay from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Relay"
        ],
        "summary": "Updates the current state of the relay",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RelaySetStateDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RelaySetStateDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RelaySetStateDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Relay state updated successfully"
          },
          "400": {
            "description": "Relay Id in url and object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find relay from id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Returns All Schedules",
        "operationId": "ScheduleGetAll",
        "responses": {
          "200": {
            "description": "Returns all Schedules",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Creates a new Schedule",
        "operationId": "ScheduleInsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Schedule created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/{id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Returns specified Schedule",
        "operationId": "ScheduleGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns specified Schedule",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Schedule with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Updates Schedule",
        "operationId": "ScheduleUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Schedule updated successfully"
          },
          "400": {
            "description": "Schedule id in url and object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Schedule with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Deletes Schedule",
        "operationId": "ScheduleDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Schedule deleted successfully"
          },
          "404": {
            "description": "Could not find Schedule with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/{id}/Tasks": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Returns All Tasks for the specified Schedule",
        "operationId": "ScheduleTasksGetByScheduleId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns Schedules Tasks for Schedule",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Could not find Schedule with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleTask": {
      "get": {
        "tags": [
          "ScheduleTask"
        ],
        "summary": "Returns All Schedule Tasks",
        "operationId": "ScheduleTaskGetAll",
        "responses": {
          "200": {
            "description": "Returns all Schedule Tasks",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ScheduleTask"
        ],
        "summary": "Creates a new Schedule Task",
        "operationId": "ScheduleTaskGetInsert",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Schedule Task created successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/ScheduleTask/{id}": {
      "get": {
        "tags": [
          "ScheduleTask"
        ],
        "summary": "Returns specified Schedule Task",
        "operationId": "ScheduleTaskGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns single Schedule Task",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleTaskDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Schedule Task with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ScheduleTask"
        ],
        "summary": "Updates Schedule Task",
        "operationId": "ScheduleTaskUpdate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScheduleTaskDto"
                  }
                ],
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Schedule Task updated successfully"
          },
          "400": {
            "description": "Schedule Task id in url and object do not match",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Schedule Task with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "ScheduleTask"
        ],
        "summary": "Deletes Schedule Task",
        "operationId": "ScheduleTaskDelete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Schedule Task deleted successfully"
          },
          "404": {
            "description": "Could not find Schedule Task with given id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskActions": {
      "get": {
        "tags": [
          "TaskActions"
        ],
        "summary": "Returns all the possible Task Actions",
        "operationId": "TaskActionGetAll",
        "responses": {
          "200": {
            "description": "Returns all the possible Task Actions",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskActionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TaskActions/{id}": {
      "get": {
        "tags": [
          "TaskActions"
        ],
        "summary": "Returns a single Task Actions",
        "operationId": "TaskActionGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/TaskActionId"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified Task Action",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskActionDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Task Action with id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TimeIntervalUnit": {
      "get": {
        "tags": [
          "TimeIntervalUnit"
        ],
        "summary": "Returns all the possible Time Interval Units",
        "operationId": "TimeIntervalUnitGetAll",
        "responses": {
          "200": {
            "description": "Returns all the possible Time Interval Units",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervalUnitDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervalUnitDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TimeIntervalUnitDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TimeIntervalUnit/{id}": {
      "get": {
        "tags": [
          "TimeIntervalUnit"
        ],
        "summary": "Returns a single Time Interval Unit",
        "operationId": "TimeIntervalUnitGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified Time Interval Unit",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TimeIntervalUnitDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeIntervalUnitDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TimeIntervalUnitDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Time Interval Unit with id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/TriggerType": {
      "get": {
        "tags": [
          "TriggerType"
        ],
        "summary": "Returns all the possible Trigger Types",
        "operationId": "TriggerTypeGetAll",
        "responses": {
          "200": {
            "description": "Returns all the possible Trigger Types",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TriggerTypeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/TriggerType/{id}": {
      "get": {
        "tags": [
          "TriggerType"
        ],
        "summary": "Returns a single Trigger Type",
        "operationId": "TriggerTypeGetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the specified Trigger Type",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerTypeDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerTypeDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TriggerTypeDto"
                }
              }
            }
          },
          "404": {
            "description": "Could not find Trigger Type with id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AppSettingDto": {
        "required": [
          "appSettingId",
          "key",
          "value"
        ],
        "type": "object",
        "properties": {
          "appSettingId": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "maxLength": 255,
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "canBeUpdated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "DeviceType": {
        "enum": [
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "DefaultState": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "ControlDeviceDto": {
        "required": [
          "alias"
        ],
        "type": "object",
        "properties": {
          "controlDeviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceType"
              }
            ]
          },
          "deviceType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "alias": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "gpioPinNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "serialNumber": {
            "type": "string",
            "nullable": true
          },
          "defaultState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DefaultState"
              }
            ],
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DS18B20Dto": {
        "type": "object",
        "properties": {
          "readingDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "readingValueCelcius": {
            "type": "number",
            "format": "double"
          },
          "readingValueFahrenheit": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "FloatSensorDto": {
        "type": "object",
        "properties": {
          "floatSensorState": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeasurementUnit": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "MeasurementDto": {
        "type": "object",
        "properties": {
          "measurementId": {
            "type": "integer",
            "format": "int64"
          },
          "controlDeviceId": {
            "type": "integer",
            "format": "int32"
          },
          "measurementValue": {
            "type": "number",
            "format": "double"
          },
          "measurementUnit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MeasurementUnit"
              }
            ]
          },
          "measurementDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MeasurementUnitDto": {
        "type": "object",
        "properties": {
          "measurementUnitId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelayDto": {
        "type": "object",
        "properties": {
          "relayState": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelayState": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "RelaySetStateDto": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RelayState"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "TaskActionId": {
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "ScheduleTaskDto": {
        "type": "object",
        "properties": {
          "scheduleTaskId": {
            "type": "integer",
            "format": "int32"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "taskActionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskActionId"
              }
            ]
          },
          "controlDeviceId": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TriggerType": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "TimeIntervalUnit": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "ScheduleDto": {
        "type": "object",
        "properties": {
          "scheduleId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "scheduleTasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleTaskDto"
            },
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "triggerTypeId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TriggerType"
              }
            ]
          },
          "triggerTimeOfDay": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "triggerOffsetAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "triggerOffsetAmountTimeIntervalUnitId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeIntervalUnit"
              }
            ],
            "nullable": true
          },
          "intervalAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "intervalAmountTimeIntervalUnitId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeIntervalUnit"
              }
            ],
            "nullable": true
          },
          "nextRunDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "TaskActionDto": {
        "type": "object",
        "properties": {
          "taskActionId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskActionId"
              }
            ]
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "deviceType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceType"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "TimeIntervalUnitDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TriggerTypeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}