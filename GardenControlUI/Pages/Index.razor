@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.

<div class="row">
    <div class="col-sm-12 col-md-6">
        <div class="card">
            <div class="card-header">
                <h4>Relays</h4>
            </div>
            <div class="card-body">
                @if (relays == null)
                {
                    <span>Loading Relays...</span>
                }
                else
                {
                    <ul class="list-unstyled">
                        @foreach (var relay in relays)
                        {
                            <li>
                                <RelayComponent ControlDeviceId="@relay.ControlDeviceId" Alias="@relay.Alias" IsRelayOn="@GetIsRelayOn(relay)"></RelayComponent>
                            </li>
                        }
                    </ul>

                }
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-6">
        <div class="card">
            <div class="card-header">
                <h4>Float Sensors</h4>
            </div>
            <div class="card-body">
                @if (floatSensors == null)
                {
                    <span>Loading Float Sensors...</span>
                }
                else
                {
                    <ul class="list-unstyled">
                        @foreach (var floatSensor in floatSensors)
                        {
                            <li>
                                
                            </li>
                        }
                    </ul>

                }
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12 col-md-6">
        <div class="card">
            <div class="card-header">
                <h4>DS18B20 Thermometers</h4>
            </div>
            <div class="card-body">
                @if (ds18b20Thermometers == null)
                {
                    <span>Loading DS18B20 Thermometers...</span>
                }
                else
                {
                    <ul class="list-unstyled">
                        @foreach (var ds18b20Thermometer in ds18b20Thermometers)
                        {
                            <li>
                                
                            </li>
                        }
                    </ul>

                }
            </div>
        </div>
    </div>
</div>

@code{
    private ICollection<GardenControlCore.Models.ControlDevice> relays;
    private ICollection<GardenControlCore.Models.ControlDevice> floatSensors;
    private ICollection<GardenControlCore.Models.ControlDevice> ds18b20Thermometers;

    protected override async Task OnInitializedAsync()
    {
        swaggerClient client = new(Configuration["APIBaseUrl"], Http);
        var controlDevices = await client.ControlDeviceAllAsync();


        relays = controlDevices.Where(cd => (int)cd.DeviceTypeId == (int)GardenControlCore.Enums.DeviceType.Relay)
            .Select(cd => new GardenControlCore.Models.ControlDevice {
                ControlDeviceId = cd.ControlDeviceId,
                Alias = cd.Alias,
                DeviceTypeId = GardenControlCore.Enums.DeviceType.Relay
            }).ToList();

        floatSensors = controlDevices.Where(cd => (int)cd.DeviceTypeId == (int)GardenControlCore.Enums.DeviceType.FloatSensor)
            .Select(cd => new GardenControlCore.Models.ControlDevice
            {
                ControlDeviceId = cd.ControlDeviceId,
                Alias = cd.Alias,
                DeviceTypeId = GardenControlCore.Enums.DeviceType.FloatSensor
            }).ToList();

        ds18b20Thermometers = controlDevices.Where(cd => (int)cd.DeviceTypeId == (int)GardenControlCore.Enums.DeviceType.DS18B20)
            .Select(cd => new GardenControlCore.Models.ControlDevice
            {
                ControlDeviceId = cd.ControlDeviceId,
                Alias = cd.Alias,
                DeviceTypeId = GardenControlCore.Enums.DeviceType.DS18B20
            }).ToList();
    }

    private bool GetIsRelayOn(GardenControlCore.Models.ControlDevice controlDevice)
    {
        swaggerClient client = new(Configuration["APIBaseUrl"], Http);
        var relayState = client.RelayAsync(controlDevice.ControlDeviceId).Result;
        return (GardenControlCore.Enums.RelayState)Enum.Parse(typeof(GardenControlCore.Enums.RelayState), relayState.RelayState) == GardenControlCore.Enums.RelayState.On;
    }
}